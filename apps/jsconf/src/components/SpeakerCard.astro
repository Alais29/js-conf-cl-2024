---
const { imgSrc, speakerName, role, speakerBrand, company, link } = Astro.props;

const defaultImgSrc = 'assets/img/misc/speaker-stock.webp';

const speakerImage = imgSrc || defaultImgSrc;
---

<a class="card-body" href={link} target="_self" rel="noopener noreferrer">
  <div class="speaker-img">
    <img src={speakerImage} alt={speakerName} />
  </div>
  <div class="speaker-info">
    <h3>{speakerName}</h3>
    <img class="speaker-company" src={speakerBrand} alt={company} />
    <small>{role}</small>
  </div>
</a>

<style>
  @property --angle {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
  }
  .card-body {
    --border-colors: var(--yellow), var(--yellow-200), var(--yellow-100), var(--yellow-500),
      var(--yellow-400), var(--yellow-600), var(--yellow);

    --radius: 1rem;

    border: 2px solid var(--yellow);
    border-radius: var(--radius);
    background-color: var(--bg-color);
    position: relative;
    transition: border-color 0.3s ease-in-out;
    text-decoration: none;
    max-width: 300px;

    & > * + * {
      margin-top: 0.5rem;
    }

    & .speaker-img {
      & img {
        width: 100%;
        aspect-ratio: 1;
        background-color: var(--light);
        border: inherit;
        border-radius: 0.85rem 0.85rem 0 0;
        object-fit: cover;
      }
    }

    & .speaker-info {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.5rem;
      padding: 0 0.75rem 0.75rem;
      & h3 {
        margin-bottom: 0;
      }

      & p {
        margin-bottom: 0;
      }

      & .speaker-company {
        max-height: 1.5rem;
      }
    }

    &::before,
    &::after {
      content: '';

      z-index: -1;
      width: 100%;
      height: 100%;

      position: absolute;
      translate: -50% -50%;
      inset-block-start: 50%;
      inset-inline-start: 50%;

      padding: 0.25rem;
      border-radius: var(--radius);
      background-image: conic-gradient(from var(--angle), var(--border-colors));
      animation: spin 3s linear infinite;
      animation-play-state: paused;
      opacity: 0;
      transition: opacity 0.3s ease-in-out;
    }

    &::before {
      filter: blur(1.5rem);
    }

    &:hover {
      & .project-img {
        padding: 0;
        & img {
          border-radius: 1rem 1rem 0 0;
        }
      }
      &::after,
      &::before {
        animation-play-state: running;
      }

      &::before {
        opacity: 0.5;
      }
      &::after {
        opacity: 1;
      }
    }
  }

  @keyframes spin {
    from {
      --angle: 0deg;
    }
    to {
      --angle: 360deg;
    }
  }
</style>
